<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAABGBJREFUeF7t
        mk9oXFUUxseCKaSxFRUqKFoVoRSULqQLtZtSF0UMqfJmEkpBEavgXnCVGYIlQ1qQWo3vvaAgFEV0UehC
        cOfGlQsXVeyiFdTEMfMmaajQf3H6nfTr482Zm/FO4GbeLe8HHzPvnnvuOd/L+9fXKRUUbB7VanW4Vqu9
        hc9z0J/QDUq+n2NsmNPvLmDsAPQH1P4fyZwDTLs7gKGD0DUatJHMPch0v4GRkcnJyfmMOSsxZ4TL+AvO
        63cN5n7B5+jMzMw2kXznWMc8yeUy/gJj32VNidHp6ekdDKfImN4Jksuwv8DIQtYUNMpQFxJTcxcY8heY
        uJk1JYc8Q13wdMjugJsM+QtMrGZN9bkDVhnyF5zHK8qU9SkguQz5C0xcUKb6uQheYNhfYORs1hSNWd0G
        obNcxl9g7D2DMStJLpfxFxjZo431oT1cxm9g5LwyZqPzTPcfmKkrczaqM91/YEY/4dlo3duld0xNTT1t
        MNhTksN0/6nX6/eZTPaS5DDdf2BoizZooS1M9x+YGVLmbDTEdP+Bmb3KnI32Mt1/8ET3ocFgT0kO0/2m
        VqsdgiF59W002kM3JJfL+Aev/FX8Ja9nTPUl5lZzfUdAf3KFH4YehZ6HjkFn0Lx+D7Bhca0zkKwtNaSW
        1BzMnQKFd0Pyz9wrkLHpTZT0IL3sZntukULQEmRqZpCSntzvBBTpesGRI7l/gYIieTjs19MVtukOQ9Fc
        iW26w1Q0T2KbBQWuMB12eRLbdIepaJ7ENt2BIg1dNEdqsE13oMiYFMoUzYukpzG2WeCMxSgY/fuLo+v+
        F/egkJ6kN266I4nK7axw7A3s5WX71KGtuh+G3KELtsNj9zK06bTCYIfuhyF36ILz4SsD+2VnczZ4RPfD
        kDt0wctzwQMMWbNy+vCDyakj27m5YXAEPKP7YcgduiCaeIwha5K48gbyXubmhkni4CXdD0Pu0AVb8cSz
        DFnTiiofNaPy+9y0Rq432TtQKyq/o/thyB26IIx0/aZ3JZx4qDkX7ONmF0kU/Izcvn8EiaPmxWZcTn89
        ijWibC8ihtyhC+IwfJOhlFY8vj+Jyye42cHS7Pgu5P0HXWvEEztvj3bSmiu/YLq7yKmThJWv5Hv762AI
        a/yV9kGtTXSJLphElZMMpbTCytuI/dZul+7hUAp2zOSdXBw9sxxOWZp79XHMWVgOK09xKKUZVz5B3vVW
        WP4An9/cWScrTnWHoeiPDKVg7EuJNcNyx7P50udj92N8kXlrwnl8XO4K/3wcjODacARj8zLejILXmbaG
        PHBhZ/+ezTWJ091hKLq6/NlrTzJcgpGHMfYvY43FT8efk3E5pJMw+JbjFqr8mr1Vyg4xz+sUp7vDVBT6
        Xp4HluPgCVzgflCxVfyVf8LnRTVuo0vQDA750zhdrqqYUWzTHaaieRLbdIepaJ7ENt1hKponsU13mIrm
        SWzTHSjS0EVzJPfvBOXeLoVU4TyooZ87CgoKCnpTKt0CWD5nKn5ZdOoAAAAASUVORK5CYII=
</value>
  </data>
</root>